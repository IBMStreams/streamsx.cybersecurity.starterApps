namespace com.ibm.streamsx.cybersecurity.sample ;

use com.ibm.streamsx.network.parse::* ;
use com.ibm.streamsx.network.source::* ;
use com.ibm.streams.cybersecurity.types::* ;

composite DPLiveSrc(output DNSMsgParser_Stream )
{
	param
		expression<rstring> $networkInterface : "eth0" ;
		expression<rstring> $filterExpression : "udp port 53" ;
	graph
		(stream<PacketType> PktFileSrc_Stream) as PktFileSrc =
			PacketLiveSource()
		{
			param
				networkInterface : $networkInterface;
				inputFilter : $filterExpression ;
				metricsInterval : 0.0 ;
			output
				PktFileSrc_Stream : captureTime = createTimestamp((int64)
					CAPTURE_SECONDS(), CAPTURE_MICROSECONDS() * 1000u), dstAddress =
					IPV4_DST_ADDRESS(), dnsMessage = PAYLOAD_DATA() ;
		}

		(stream<DPDNSResponseMessage_t> DNSMsgParser_Stream) as DNSMsgParser =
			DNSMessageParser(PktFileSrc_Stream)
		{
			param
				messageAttribute : dnsMessage ;
				outputFilters : DNS_RESPONSE_FLAG() && DNS_RESPONSE_CODE() != 0ub && ! parseError() ;
			output
				DNSMsgParser_Stream : questionName = DNS_QUESTION_NAME(), responseCode =
					DNS_RESPONSE_CODE(), answerDataIPv4 = DNS_ANSWER_IPV4_ADDRESSES(),
					additionalData = DNS_ADDITIONAL_DATA() ;
		}

}


